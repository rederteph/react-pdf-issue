{"version":3,"file":"react-pdf.browser.es.js","sources":["../src/utils/styles.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/formatter.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/elements/Root.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/transform.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n    this.glyphs = {};\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    if (!this.glyphs[id]) {\n      this.glyphs[id] = this.src.font.characterToGlyph(id);\n    }\n\n    return {\n      id,\n      _font: this.src,\n      name: this.glyphs[id],\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fallbackFontInstance = null;\n    }\n\n    get fallbackFont() {\n      if (!this.fallbackFontInstance) {\n        this.fallbackFontInstance = new StandardFont('Helvetica');\n      }\n\n      return this.fallbackFontInstance;\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        let defaultFont;\n\n        if (typeof run.attributes.font === 'string') {\n          defaultFont = new StandardFont(run.attributes.font);\n        } else {\n          defaultFont = run.attributes.font;\n        }\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          let font = defaultFont;\n\n          // If the default font does not have a glyph\n          // and the fallback font does, we use it\n          if (\n            !defaultFont.hasGlyphForCodePoint(codePoint) &&\n            this.fallbackFont.hasGlyphForCodePoint(codePoint)\n          ) {\n            font = this.fallbackFont;\n          }\n\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, stretch, shrink) => ({\n  type: 'glue',\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\nimport linebreak from './linebreak';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst NO_BREAK_SPACE_DECIMAL = 160;\n\nconst getWords = glyphString => {\n  const words = [];\n  const { start } = glyphString;\n  let lastIndex = 0;\n\n  for (const { index } of glyphString) {\n    const codePoint = glyphString.codePointAtGlyphIndex(index);\n\n    // Not break words in no-break-spaces\n    if (codePoint === NO_BREAK_SPACE_DECIMAL) {\n      continue;\n    }\n\n    if (glyphString.isWhiteSpace(index - start)) {\n      const word = glyphString.slice(lastIndex, index - start);\n\n      if (word.length > 0) {\n        words.push(word);\n      }\n\n      lastIndex = index - start + 1;\n    }\n  }\n\n  if (lastIndex < glyphString.end) {\n    const word = glyphString.slice(\n      lastIndex,\n      glyphString.end - glyphString.start,\n    );\n    words.push(word);\n  }\n\n  return words;\n};\n\nconst h = new Hypher(english);\nconst hyphenateString = string => {\n  if (string.includes(SOFT_HYPHEN_HEX)) {\n    return string.split(SOFT_HYPHEN_HEX);\n  }\n\n  return h.hyphenate(string);\n};\n\nconst hyphenateWord = glyphString => {\n  const hyphenated = hyphenateString(glyphString.string);\n\n  let index = 0;\n  const parts = hyphenated.map(part => {\n    const res = glyphString.slice(index, index + part.length);\n    index += part.length;\n    return res;\n  });\n\n  return parts;\n};\n\nconst hyphenate = words => words.map(word => hyphenateWord(word));\n\nconst formatter = (measureText, textAlign, callback) => {\n  const spaceWidth = measureText(' ');\n  const hyphenWidth = measureText('-');\n  const hyphenPenalty = !textAlign || textAlign === 'justify' ? 100 : 600;\n  const opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9,\n  };\n\n  return glyphString => {\n    const nodes = [];\n    const words = getWords(glyphString);\n    const spaceStretch = spaceWidth * opts.width / opts.stretch;\n    const spaceShrink = spaceWidth * opts.width / opts.shrink;\n    const hyphenationCallback = callback || hyphenate;\n    const hyphenatedWords = hyphenationCallback(words, glyphString);\n\n    hyphenatedWords.forEach((word, index, array) => {\n      if (word.length > 1) {\n        word.forEach((part, partIndex, partArray) => {\n          const isLastPart = partIndex === word.length - 1;\n\n          nodes.push(linebreak.box(measureText(part), part, !isLastPart));\n\n          if (partIndex !== partArray.length - 1) {\n            nodes.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        });\n      } else {\n        nodes.push(linebreak.box(measureText(word[0]), word[0]));\n      }\n      if (index === array.length - 1) {\n        nodes.push(linebreak.glue(0, linebreak.infinity, 0));\n        nodes.push(linebreak.penalty(0, -linebreak.infinity, 1));\n      } else {\n        nodes.push(linebreak.glue(spaceWidth, spaceStretch, spaceShrink));\n      }\n    });\n\n    return nodes;\n  };\n};\n\nexport default formatter;\n","import createLinebreaker from '@textkit/linebreaker';\nimport formatter from './formatter';\nimport linebreak from './linebreak';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_LIMIT = 40;\n\nexport default ({ hyphenationCallback } = {}) => Textkit => {\n  const TextkitLinebreaker = createLinebreaker()(Textkit);\n  const fallbackLinebreaker = new TextkitLinebreaker();\n\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    suggestLineBreak(glyphString, width, paragraphStyle) {\n      let tolerance = this.tolerance;\n      const measuredWidth = this.measureWidth(glyphString);\n      const nodes = formatter(\n        measuredWidth,\n        paragraphStyle.align,\n        hyphenationCallback,\n      )(glyphString);\n      let breaks = [];\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        breaks = linebreak(nodes, [width], { tolerance });\n        tolerance += 2;\n      }\n\n      // Fallback to textkit default's linebreaking algorithm if K&P fails\n      if (breaks.length === 0) {\n        const fallback = fallbackLinebreaker.suggestLineBreak(\n          glyphString,\n          width,\n          paragraphStyle,\n        );\n        if (fallback) return fallback;\n\n        // If fallback didn't worked, we split workd based on width\n        const index = glyphString.glyphIndexAtOffset(width) - 1;\n        glyphString.insertGlyph(index, HYPHEN);\n        return { position: index + 1 };\n      }\n\n      if (!breaks[1]) {\n        return { position: glyphString.end };\n      }\n\n      const breakNode = this.findBreakNode(nodes, breaks[1].position);\n      const breakIndex = breakNode.value.end - glyphString.start;\n\n      if (breakNode.hyphenated) {\n        glyphString.insertGlyph(breakIndex, HYPHEN);\n        return { position: breakIndex + 1 };\n      }\n\n      // We kep the blank space at the end of the line to avoid justification issues\n      const offset = glyphString.isWhiteSpace(breakIndex) ? 1 : 0;\n      return { position: breakIndex + offset };\n    }\n\n    measureWidth(glyphString) {\n      const { font, fontSize } = glyphString.glyphRuns[0].attributes;\n\n      return word => {\n        if (typeof word === 'string') {\n          const scale = fontSize / font.unitsPerEm;\n          return font.layout(word).positions[0].xAdvance * scale;\n        }\n\n        return word.advanceWidth;\n      };\n    }\n\n    findBreakNode(nodes, position) {\n      let index = position - 1;\n\n      while (!nodes[index].value) {\n        index -= 1;\n      }\n\n      return nodes[index];\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport lineFragmentGenerator from '@textkit/line-fragment-generator';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      lineFragmentGenerator: lineFragmentGenerator(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      lineBreaker: lineBreaker({ hyphenationCallback }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  TabStop,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import PDFDocument from '@react-pdf/pdfkit';\nimport { LayoutEngine } from '../layout';\nimport Font from '../font';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n    this._layoutEngine = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({ hyphenationCallback });\n    }\n\n    return this._layoutEngine;\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst isCompatibleBase64 = src =>\n  /data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveLocalImage = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveRemoteImage = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(buffer => {\n      if (buffer.constructor.name === 'Buffer') {\n        return buffer;\n      }\n      return Buffer.from(buffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    });\n};\n\nexport const resolveImage = (src, cache = true) => {\n  if (cache && imagesCache.get(src)) return imagesCache.get(src);\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (typeof src === 'object') {\n    image = resolveLocalImage(src);\n  } else {\n    image = resolveRemoteImage(src);\n  }\n\n  if (cache) {\n    imagesCache.set(src, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  wrapPages() {\n    let pageCount = 1;\n\n    const pages = this.children.reduce((acc, page) => {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        return [...acc, ...subpages];\n      } else {\n        page.height = page.size.height;\n        return [...acc, page];\n      }\n    }, []);\n\n    return pages;\n  }\n\n  async renderPages() {\n    const subpages = this.wrapPages();\n\n    for (let j = 0; j < subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await subpages[j].render();\n    }\n\n    return subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","import Yoga from 'yoga-layout';\nimport upperFirst from 'lodash.upperfirst';\n\nconst PERCENT = /^(\\d+)?%$/g;\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseInt(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPaddingPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setMarginPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (PERCENT.exec(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n    const isBorderStyle = key.match(/border/) && typeof value === 'string';\n    const resolved = isBorderStyle ? processBorders(key, value) : value;\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null && style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  drawBorders() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n    } = this;\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.instance.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      [\n        left + width - (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - borderRightWidth / 2,\n        top + (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - borderRightWidth / 2,\n        top + height - (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      [\n        left + (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + borderLeftWidth / 2,\n        top + height - (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + borderLeftWidth / 2,\n        top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.instance.restore();\n  },\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.instance.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.instance.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.instance.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n};\n\nexport default Borders;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport upperFirst from 'lodash.upperfirst';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Transform from '../mixins/transform';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .roundedRect(left, top, width, height, borderRadius)\n        .fill();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport StyleSheet from '../stylesheet';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) {\n      return this._size;\n    }\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.style.marginTop ||\n      !!this.style.marginBottom ||\n      !!this.style.marginLeft ||\n      !!this.style.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.style.marginTop = 0;\n      this.style.marginBottom = 0;\n      this.style.marginLeft = 0;\n      this.style.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    this.top = 0;\n    this.left = 0;\n    this.style = StyleSheet.resolve(this.props.style);\n\n    this.resetMargins();\n\n    this.layout.setWidth(this.size.width);\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n    const { paddingTop = 0, paddingLeft = 0 } = this.style;\n\n    if (this.hasHorizontalRuler()) {\n      this.style.paddingTop = paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.style.paddingLeft = paddingLeft + rulerWidth;\n    }\n\n    super.applyProps();\n  }\n\n  addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        parent.appendChild(instance);\n        instance.applyProps();\n        this.addDynamicChild(instance, props.children);\n      } else {\n        this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  nodeWillWrap(props) {\n    this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  update(newProps) {}\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const getURL = value => {\n  let src = value;\n\n  if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n    src = `http://${src}`;\n  }\n\n  return src;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import upperFirst from 'lodash.upperfirst';\nimport { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  let fragments = [];\n  const {\n    color = 'black',\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport { Rect, Path, Container } from '../layout';\nimport { getURL } from '../utils/url';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst INFINITY = 999999;\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    height = height || INFINITY;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, height);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.root.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans - 1);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n    const slicedLine = this.lines[slicedLineIndex - 1];\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString.slice(\n      slicedLine ? slicedLine.stringEnd : 0,\n      this.attributedString.length,\n    );\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await resolveImage(this.props.src, this.props.cache);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async render() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const width =\n        Math.min(this.height * this.ratio, this.width) -\n        padding.left -\n        padding.right;\n      const height = this.height - padding.top - padding.bottom;\n      const xOffset = Math.max((this.width - width) / 2, 0);\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\n\nconst objectsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        objectsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !objectsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ blob });\n          }\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    if (container.document.props.onRender) {\n      container.document.props.onRender();\n    }\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ string: result });\n          }\n\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty()) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState({ blob, url: URL.createObjectURL(blob), loading: false });\n      })\n      .catch(error => {\n        this.setState({ error });\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({ className, style, children }) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","StandardFont","src","name","PDFFont","open","glyphs","layout","str","encode","encoded","positions","map","_","i","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","font","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fallbackFontInstance","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","fallbackFont","Node","data","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","box","value","hyphenated","SOFT_HYPHEN_HEX","NO_BREAK_SPACE_DECIMAL","getWords","words","glyphString","codePointAtGlyphIndex","isWhiteSpace","word","h","Hypher","english","hyphenateString","includes","split","hyphenate","hyphenateWord","parts","part","formatter","measureText","textAlign","callback","spaceWidth","hyphenWidth","hyphenPenalty","opts","spaceStretch","spaceShrink","hyphenationCallback","hyphenatedWords","array","partIndex","partArray","isLastPart","HYPHEN","TOLERANCE_LIMIT","TextkitLinebreaker","createLinebreaker","Textkit","fallbackLinebreaker","suggestLineBreak","paragraphStyle","measuredWidth","measureWidth","align","fallback","glyphIndexAtOffset","insertGlyph","breakNode","findBreakNode","breakIndex","offset","glyphRuns","fontSize","scale","unitsPerEm","xAdvance","shrinkWhitespaceFactor","before","after","LayoutEngine","engines","scriptItemizer","textDecorationEngine","lineFragmentGenerator","fontSubstitutionEngine","lineBreaker","justificationEngine","BaseLayoutEngine","fetchFont","fetch","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","register","family","otherOptions","registerHyphenationCallback","registerEmojiSource","url","format","getRegisteredFonts","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","loading","isUrl","fontkit","create","openSync","loaded","registerFont","standardFonts","Error","reset","hasOwnProperty","clear","Root","isDirty","document","instance","_layoutEngine","appendChild","child","markDirty","render","PDFDocument","autoFirstPage","Font","MARKERS","JPEG","height","readUInt16BE","marker","pos","createCache","limit","cache","keys","key","imagesCache","isValidFormat","lower","toLowerCase","isCompatibleBase64","test","getImage","body","extension","PNG","resolveBase64Image","match","exec","resolve","resolveLocalImage","resolveRemoteImage","constructor","isPng","isJpg","resolveImage","get","image","set","emojis","regex","emojiRegex","reflect","promise","v","e","fetchEmojiImage","getCodePoints","join","buildEmojiUrl","emoji","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","parent","removeChild","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","all","loadEmojis","loadImages","loadAssets","applyProps","update","newProps","wrapPages","pageCount","pages","page","wrapArea","paddingBottom","wrap","subpages","renderPages","j","renderDynamicNodes","defaultProps","PERCENT","computed","Yoga","createDefault","insertChild","getChildCount","splice","removeAllChilds","setDimension","attr","fixedMethod","upperFirst","percentMethod","isPercent","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","copyStyle","calculateLayout","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","parseFloat","unit","parseScalar","scalar","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","expandedStyles","isBorderStyle","resolved","styles","flatten","Array","isArray","input","resolveMediaQueries","container","matchMedia","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","Borders","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","drawHorizontalBorder","drawVerticalBorder","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","translate","Transformations","re","Base","merge","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","drawBackgroundColor","borderRadius","backgroundColor","roundedRect","clone","onNodeSplit","renderChildren","filter","absolute","nonAbsoluteChilds","absoluteChilds","break","fixed","minPresenceAhead","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","toUpperCase","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","Page","_size","resetMargins","setWidth","rulerWidth","getRulerWidth","addDynamicChild","elements","Fragment","createInstance","cb","condition","nodeWillWrap","addPage","debug","renderRuler","View","applyTransformations","drawBorders","PROTOCOL_REGEXP","getURL","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","preprocessor","getAttributedString","AttributedString","fromFragments","trim","INFINITY","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","renderCallback","setMeasureFunc","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","path","Path","Container","attributedString","layoutEngine","linesCount","blocks","block","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","min","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","stringEnd","y","x","initialX","href","Link","link","Note","note","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","message","xOffset","constructors","objectsEqual","a","b","oldPropsKeys","newPropsKeys","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","instanceType","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","reject","on","blob","stream","toBlob","onRender","error","mountNode","createContainer","updateContainer","toBuffer","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","setState","URL","createObjectURL","catch","React","PureComponent","BlobProvider","PDFViewer","className","PDFDownloadLink","fileName","downloadOnIE","window","navigator","msSaveBlob","params"],"mappings":"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"}