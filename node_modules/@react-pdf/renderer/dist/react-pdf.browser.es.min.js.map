{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/styles.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/formatter.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/elements/Root.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/transform.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n    this.glyphs = {};\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    if (!this.glyphs[id]) {\n      this.glyphs[id] = this.src.font.characterToGlyph(id);\n    }\n\n    return {\n      id,\n      _font: this.src,\n      name: this.glyphs[id],\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fallbackFontInstance = null;\n    }\n\n    get fallbackFont() {\n      if (!this.fallbackFontInstance) {\n        this.fallbackFontInstance = new StandardFont('Helvetica');\n      }\n\n      return this.fallbackFontInstance;\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        let defaultFont;\n\n        if (typeof run.attributes.font === 'string') {\n          defaultFont = new StandardFont(run.attributes.font);\n        } else {\n          defaultFont = run.attributes.font;\n        }\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          let font = defaultFont;\n\n          // If the default font does not have a glyph\n          // and the fallback font does, we use it\n          if (\n            !defaultFont.hasGlyphForCodePoint(codePoint) &&\n            this.fallbackFont.hasGlyphForCodePoint(codePoint)\n          ) {\n            font = this.fallbackFont;\n          }\n\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, stretch, shrink) => ({\n  type: 'glue',\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\nimport linebreak from './linebreak';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst NO_BREAK_SPACE_DECIMAL = 160;\n\nconst getWords = glyphString => {\n  const words = [];\n  const { start } = glyphString;\n  let lastIndex = 0;\n\n  for (const { index } of glyphString) {\n    const codePoint = glyphString.codePointAtGlyphIndex(index);\n\n    // Not break words in no-break-spaces\n    if (codePoint === NO_BREAK_SPACE_DECIMAL) {\n      continue;\n    }\n\n    if (glyphString.isWhiteSpace(index - start)) {\n      const word = glyphString.slice(lastIndex, index - start);\n\n      if (word.length > 0) {\n        words.push(word);\n      }\n\n      lastIndex = index - start + 1;\n    }\n  }\n\n  if (lastIndex < glyphString.end) {\n    const word = glyphString.slice(\n      lastIndex,\n      glyphString.end - glyphString.start,\n    );\n    words.push(word);\n  }\n\n  return words;\n};\n\nconst h = new Hypher(english);\nconst hyphenateString = string => {\n  if (string.includes(SOFT_HYPHEN_HEX)) {\n    return string.split(SOFT_HYPHEN_HEX);\n  }\n\n  return h.hyphenate(string);\n};\n\nconst hyphenateWord = glyphString => {\n  const hyphenated = hyphenateString(glyphString.string);\n\n  let index = 0;\n  const parts = hyphenated.map(part => {\n    const res = glyphString.slice(index, index + part.length);\n    index += part.length;\n    return res;\n  });\n\n  return parts;\n};\n\nconst hyphenate = words => words.map(word => hyphenateWord(word));\n\nconst formatter = (measureText, textAlign, callback) => {\n  const spaceWidth = measureText(' ');\n  const hyphenWidth = measureText('-');\n  const hyphenPenalty = !textAlign || textAlign === 'justify' ? 100 : 600;\n  const opts = {\n    width: 3,\n    stretch: 6,\n    shrink: 9,\n  };\n\n  return glyphString => {\n    const nodes = [];\n    const words = getWords(glyphString);\n    const spaceStretch = spaceWidth * opts.width / opts.stretch;\n    const spaceShrink = spaceWidth * opts.width / opts.shrink;\n    const hyphenationCallback = callback || hyphenate;\n    const hyphenatedWords = hyphenationCallback(words, glyphString);\n\n    hyphenatedWords.forEach((word, index, array) => {\n      if (word.length > 1) {\n        word.forEach((part, partIndex, partArray) => {\n          const isLastPart = partIndex === word.length - 1;\n\n          nodes.push(linebreak.box(measureText(part), part, !isLastPart));\n\n          if (partIndex !== partArray.length - 1) {\n            nodes.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        });\n      } else {\n        nodes.push(linebreak.box(measureText(word[0]), word[0]));\n      }\n      if (index === array.length - 1) {\n        nodes.push(linebreak.glue(0, linebreak.infinity, 0));\n        nodes.push(linebreak.penalty(0, -linebreak.infinity, 1));\n      } else {\n        nodes.push(linebreak.glue(spaceWidth, spaceStretch, spaceShrink));\n      }\n    });\n\n    return nodes;\n  };\n};\n\nexport default formatter;\n","import createLinebreaker from '@textkit/linebreaker';\nimport formatter from './formatter';\nimport linebreak from './linebreak';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_LIMIT = 40;\n\nexport default ({ hyphenationCallback } = {}) => Textkit => {\n  const TextkitLinebreaker = createLinebreaker()(Textkit);\n  const fallbackLinebreaker = new TextkitLinebreaker();\n\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    suggestLineBreak(glyphString, width, paragraphStyle) {\n      let tolerance = this.tolerance;\n      const measuredWidth = this.measureWidth(glyphString);\n      const nodes = formatter(\n        measuredWidth,\n        paragraphStyle.align,\n        hyphenationCallback,\n      )(glyphString);\n      let breaks = [];\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        breaks = linebreak(nodes, [width], { tolerance });\n        tolerance += 2;\n      }\n\n      // Fallback to textkit default's linebreaking algorithm if K&P fails\n      if (breaks.length === 0) {\n        const fallback = fallbackLinebreaker.suggestLineBreak(\n          glyphString,\n          width,\n          paragraphStyle,\n        );\n        if (fallback) return fallback;\n\n        // If fallback didn't worked, we split workd based on width\n        const index = glyphString.glyphIndexAtOffset(width) - 1;\n        glyphString.insertGlyph(index, HYPHEN);\n        return { position: index + 1 };\n      }\n\n      if (!breaks[1]) {\n        return { position: glyphString.end };\n      }\n\n      const breakNode = this.findBreakNode(nodes, breaks[1].position);\n      const breakIndex = breakNode.value.end - glyphString.start;\n\n      if (breakNode.hyphenated) {\n        glyphString.insertGlyph(breakIndex, HYPHEN);\n        return { position: breakIndex + 1 };\n      }\n\n      // We kep the blank space at the end of the line to avoid justification issues\n      const offset = glyphString.isWhiteSpace(breakIndex) ? 1 : 0;\n      return { position: breakIndex + offset };\n    }\n\n    measureWidth(glyphString) {\n      const { font, fontSize } = glyphString.glyphRuns[0].attributes;\n\n      return word => {\n        if (typeof word === 'string') {\n          const scale = fontSize / font.unitsPerEm;\n          return font.layout(word).positions[0].xAdvance * scale;\n        }\n\n        return word.advanceWidth;\n      };\n    }\n\n    findBreakNode(nodes, position) {\n      let index = position - 1;\n\n      while (!nodes[index].value) {\n        index -= 1;\n      }\n\n      return nodes[index];\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport lineFragmentGenerator from '@textkit/line-fragment-generator';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      lineFragmentGenerator: lineFragmentGenerator(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      lineBreaker: lineBreaker({ hyphenationCallback }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  TabStop,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import PDFDocument from '@react-pdf/pdfkit';\nimport { LayoutEngine } from '../layout';\nimport Font from '../font';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n    this._layoutEngine = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({ hyphenationCallback });\n    }\n\n    return this._layoutEngine;\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst isCompatibleBase64 = src =>\n  /data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveLocalImage = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveRemoteImage = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(buffer => {\n      if (buffer.constructor.name === 'Buffer') {\n        return buffer;\n      }\n      return Buffer.from(buffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    });\n};\n\nexport const resolveImage = (src, cache = true) => {\n  if (cache && imagesCache.get(src)) return imagesCache.get(src);\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (typeof src === 'object') {\n    image = resolveLocalImage(src);\n  } else {\n    image = resolveRemoteImage(src);\n  }\n\n  if (cache) {\n    imagesCache.set(src, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  wrapPages() {\n    let pageCount = 1;\n\n    const pages = this.children.reduce((acc, page) => {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        return [...acc, ...subpages];\n      } else {\n        page.height = page.size.height;\n        return [...acc, page];\n      }\n    }, []);\n\n    return pages;\n  }\n\n  async renderPages() {\n    const subpages = this.wrapPages();\n\n    for (let j = 0; j < subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await subpages[j].render();\n    }\n\n    return subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","import Yoga from 'yoga-layout';\nimport upperFirst from 'lodash.upperfirst';\n\nconst PERCENT = /^(\\d+)?%$/g;\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseInt(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setPaddingPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const isPercent = PERCENT.exec(value);\n\n    if (isPercent) {\n      this.layout.setMarginPercent(edge, parseInt(isPercent[1], 10));\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (PERCENT.exec(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n    const isBorderStyle = key.match(/border/) && typeof value === 'string';\n    const resolved = isBorderStyle ? processBorders(key, value) : value;\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null && style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  drawBorders() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n    } = this;\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.instance.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      [\n        left + width - (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - borderRightWidth / 2,\n        top + (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - borderRightWidth / 2,\n        top + height - (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      [\n        left + (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + borderLeftWidth / 2,\n        top + height - (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + borderLeftWidth / 2,\n        top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.instance.restore();\n  },\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.instance.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.instance.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.instance.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n};\n\nexport default Borders;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport upperFirst from 'lodash.upperfirst';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Transform from '../mixins/transform';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .roundedRect(left, top, width, height, borderRadius)\n        .fill();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport StyleSheet from '../stylesheet';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) {\n      return this._size;\n    }\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.style.marginTop ||\n      !!this.style.marginBottom ||\n      !!this.style.marginLeft ||\n      !!this.style.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.style.marginTop = 0;\n      this.style.marginBottom = 0;\n      this.style.marginLeft = 0;\n      this.style.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    this.top = 0;\n    this.left = 0;\n    this.style = StyleSheet.resolve(this.props.style);\n\n    this.resetMargins();\n\n    this.layout.setWidth(this.size.width);\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n    const { paddingTop = 0, paddingLeft = 0 } = this.style;\n\n    if (this.hasHorizontalRuler()) {\n      this.style.paddingTop = paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.style.paddingLeft = paddingLeft + rulerWidth;\n    }\n\n    super.applyProps();\n  }\n\n  addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        parent.appendChild(instance);\n        instance.applyProps();\n        this.addDynamicChild(instance, props.children);\n      } else {\n        this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  nodeWillWrap(props) {\n    this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  update(newProps) {}\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const getURL = value => {\n  let src = value;\n\n  if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n    src = `http://${src}`;\n  }\n\n  return src;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import upperFirst from 'lodash.upperfirst';\nimport { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  let fragments = [];\n  const {\n    color = 'black',\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport { Rect, Path, Container } from '../layout';\nimport { getURL } from '../utils/url';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst INFINITY = 999999;\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    height = height || INFINITY;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, height);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.root.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans - 1);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n    const slicedLine = this.lines[slicedLineIndex - 1];\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString.slice(\n      slicedLine ? slicedLine.stringEnd : 0,\n      this.attributedString.length,\n    );\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await resolveImage(this.props.src, this.props.cache);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async render() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const width =\n        Math.min(this.height * this.ratio, this.width) -\n        padding.left -\n        padding.right;\n      const height = this.height - padding.top - padding.bottom;\n      const xOffset = Math.max((this.width - width) / 2, 0);\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\n\nconst objectsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        objectsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !objectsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ blob });\n          }\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    if (container.document.props.onRender) {\n      container.document.props.onRender();\n    }\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ string: result });\n          }\n\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty()) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState({ blob, url: URL.createObjectURL(blob), loading: false });\n      })\n      .catch(error => {\n        this.setState({ error });\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({ className, style, children }) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","StandardFont","src","name","PDFFont","open","glyphs","layout","str","this","encode","encoded","positions","map","_","i","g","glyph","_this","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","font","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fallbackFontInstance","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","fallbackFont","Node","data","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","box","value","SOFT_HYPHEN_HEX","NO_BREAK_SPACE_DECIMAL","getWords","words","glyphString","codePointAtGlyphIndex","isWhiteSpace","word","h","Hypher","english","hyphenateString","includes","split","hyphenate","hyphenateWord","part","formatter","measureText","textAlign","callback","spaceWidth","hyphenWidth","hyphenPenalty","opts","spaceStretch","spaceShrink","array","partIndex","partArray","isLastPart","HYPHEN","TOLERANCE_LIMIT","hyphenationCallback","fallbackLinebreaker","createLinebreaker","Textkit","suggestLineBreak","paragraphStyle","measuredWidth","measureWidth","align","fallback","glyphIndexAtOffset","insertGlyph","breakNode","findBreakNode","breakIndex","hyphenated","glyphRuns","fontSize","scale","unitsPerEm","xAdvance","shrinkWhitespaceFactor","before","after","LayoutEngine","engines","scriptItemizer","textDecorationEngine","lineFragmentGenerator","fontSubstitutionEngine","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","fetch","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","register","family","otherOptions","registerHyphenationCallback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","loading","isUrl","fetchFont","fontkit","create","openSync","loaded","registerFont","standardFonts","Error","reset","hasOwnProperty","clear","Root","isDirty","document","instance","_layoutEngine","appendChild","child","markDirty","render","PDFDocument","autoFirstPage","Font","MARKERS","JPEG","height","readUInt16BE","marker","pos","createCache","limit","cache","keys","key","imagesCache","isValidFormat","lower","toLowerCase","isCompatibleBase64","test","getImage","body","extension","PNG","resolveBase64Image","match","exec","resolve","resolveLocalImage","_JSON$stringify","resolveRemoteImage","constructor","isPng","isJpg","resolveImage","get","image","set","emojis","regex","emojiRegex","reflect","promise","v","e","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","emoji","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","parent","removeChild","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","_Promise","all","loadEmojis","loadImages","loadAssets","applyProps","update","newProps","wrapPages","pageCount","page","wrapArea","paddingBottom","wrap","subpages","renderPages","j","renderDynamicNodes","defaultProps","PERCENT","computed","Yoga","createDefault","insertChild","getChildCount","splice","removeAllChilds","setDimension","attr","fixedMethod","upperFirst","percentMethod","isPercent","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","copyStyle","calculateLayout","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","parseFloat","unit","parseScalar","scalar","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","expandedStyles","resolved","styles","flatten","Array","isArray","input","resolveMediaQueries","container","matchMedia","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","Borders","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","drawHorizontalBorder","drawVerticalBorder","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","translate","Transformations","re","Base","_Node","merge","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","drawBackgroundColor","borderRadius","backgroundColor","roundedRect","clone","onNodeSplit","renderChildren","filter","absolute","nonAbsoluteChilds","absoluteChilds","break","fixed","minPresenceAhead","_Object$assign","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","toUpperCase","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","_this2","Page","_Base","_size","resetMargins","setWidth","rulerWidth","getRulerWidth","addDynamicChild","elements","Fragment","createInstance","cb","nodeWillWrap","addPage","debug","renderRuler","View","applyTransformations","drawBorders","PROTOCOL_REGEXP","getURL","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","getAttributedString","AttributedString","fromFragments","trim","INFINITY","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","renderCallback","setMeasureFunc","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","path","Path","Container","attributedString","layoutEngine","linesCount","blocks","block","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","min","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","stringEnd","y","x","initialX","href","Link","link","Note","note","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","_context","message","xOffset","constructors","objectsEqual","a","b","oldPropsKeys","newPropsKeys","_typeof","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","reject","on","blob","stream","toBlob","onRender","error","mountNode","createContainer","updateContainer","React","InternalBlobProvider","_React$PureComponent","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","setState","URL","createObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","PDFDownloadLink","fileName","params","window","navigator","msSaveBlob"],"mappings":"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"}